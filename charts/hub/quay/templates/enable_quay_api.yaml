apiVersion: batch/v1
kind: Job
metadata:
  name: enable-quay-api
  namespace: quay-enterprise
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  template:
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
        command:
        - /bin/bash
        - -c
        - |
          oc get secret quay-temp-token
          if [ $? -ne 0 ]; then
            echo "Quay default user not created. Creating ..."  
            # Invoke API and add quay user to the API - initiates API
            JSONTOKEN=$(curl -X POST -k  https://quay-registry-quay-quay-enterprise.apps.ocp410.datamulticloud.com/api/v1/user/initialize --header 'Content-Type: application/json' --data '{ "username": "{{ .Values.global.quay.account }}", "password":"{{ .Values.global.quay.password }}", "email": "{{ .Values.global.quay.email }}", "access_token": true}') && \
            oc create secret generic quay-temp-token --from-literal=token=$JSONTOKEN
          fi
          oc get secret -n openshift-operators quay-integration
          if [ $? -ne 0 ]; then
            echo "quay-integration secret not created. Creating ..."  
            # Now extract the token and store in the Quay Integration secret in openshift-operators namespace
            TOKEN=$(oc extract secret/quay-temp-token --keys=token --to=- | grep access_token | cut -d : -f2 | awk -F\" '{print $2}') && \
            oc create secret -n openshift-operators generic quay-integration --from-literal=token=$TOKEN
          fi
        name: quay-api-enablement
      dnsPolicy: ClusterFirst
      activeDeadlineSeconds: 900
      restartPolicy: Never
      serviceAccountName: quay-admin
      terminationGracePeriodSeconds: 60
